{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC1B,EAAoCC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,OAQd,SAEI,uBACQO,KAAM,OACNC,MAAOT,EACPU,SAtBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,sCCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCDJO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAEtB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OATAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACTf,KAAMkB,EACNL,SAAS,SAGd,CAACpB,IACGqB,EDVyBK,CAAa1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAEaA,GADEA,EAAIC,aEa5BgB,EA9BM,WAGjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACA,8CACA,cAAE,EAAF,CAAeA,cAAkBA,IAEjC,uBAGI,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAE,EAAF,CAEQA,SAAYA,GADLA,Y,MCfvC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2be4efc7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState(' ')\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n//console.log({inputValue})\r\n        setCategories (cats =>[inputValue,...cats]);\r\n        setInputValue(' ');\r\n        }else{\r\n\r\n        }\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n         \r\n            <input\r\n                    type= \"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=okVlHsX9qupJRduS3lDdjf4AHrVp3Ofu`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    }\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/> \r\n            <p>{ title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category}) => {\r\n\r\n    const {data:images, loading } = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__bounce\">Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>(\r\n\r\n                        <GifGridItem\r\n                                key= { img.id }  \r\n                                { ...img }\r\n                         />\r\n                    ))\r\n                }\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifs } from \"../helpers/getGifs\" \r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs =>{\r\n            setState({\r\n            data: imgs,\r\n            loading: false\r\n        });\r\n    })\r\n    }, [category])\r\n    return state; //{data:[], loading: true};\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        < AddCategory  setCategories = { setCategories }/>\r\n\r\n        <hr/>\r\n\r\n        {\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        < GifGrid  \r\n                                key = {category}\r\n                                category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}